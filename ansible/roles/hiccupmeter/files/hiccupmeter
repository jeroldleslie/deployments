#!/bin/bash
HICCUP_HOME=/Users/leslie/Documents/workspace/neverwinterdp-deployments/ansible/roles/hiccupmeter/files
NAME=hiccupmeter.py
DAEMON=$HICCUP_HOME/$NAME
DAEMON_ARGS="-h 104.236.25.109"
PIDFILE=$HICCUP_HOME/$NAME.pid
LOG=$HICCUP_HOME/hiccupmeter.log
 
pid_file_exists() {
    [ -f "$PIDFILE" ]
}
 
do_start()      {
        
        if pid_file_exists
        then
                        echo "Hiccup Meter is already running, killing and starting again"
                        rm $PIDFILE
                        $DAEMON $DAEMON_ARGS 1>"$LOG" 2>&1 &
                        echo $! > "$PIDFILE"
                        PID=$!
                        if [ "$PID" > 0 ]
                        then
                                echo "Hiccup Meter started with pid $!"
                        else
                                echo "Hiccup Meter could not be started"
                        fi 
        else
                        echo $DAEMON $DAEMON_ARGS 
                        $DAEMON $DAEMON_ARGS 1>"$LOG" 2>&1 &
                        echo $! > "$PIDFILE"
                        PID=$!
                        if [ "$PID" > 0 ]
                        then
                                echo "Hiccup Meter started with pid $!"
                        else
                                echo "Hiccup Meter could not be started"
                        fi    
        fi
                
        
}
 
 
do_status() {
        if pid_file_exists
        then    
                PID=$(cat $PIDFILE)
                STATUS=$(ps ax | grep $PID | grep -v grep | awk '{print $1}')
                
                if [ "$STATUS" == "$PID" ]
                then
                                echo "Hiccup Meter is running on proccess $PID"
                else
                                echo "Hiccup Meter is NOT running"
                                rm $PIDFILE
                fi
        else
                echo "Hiccup Meter is NOT running"
        fi
}
 
do_stop() {
        if pid_file_exists
        then    
                PID=$(cat $PIDFILE)
                STATUS=$(ps ax | grep $PID | grep -v grep | awk '{print $1}')
                
                if [ "$STATUS" == "$PID" ]
                then
                                echo "Killing Hiccup Meter...."
                                KILL=$(kill -15 $PID)
                                rm $PIDFILE
                                sleep 1
                                echo -e "\tHiccup Meter (PID:$PID) killed"
                                
                else
                                echo "Hiccup Meter is NOT running"
                                rm $PIDFILE
                fi
        else
                echo "Hiccup Meter is NOT running"
        fi
}
 
 
case "$1" in
  start)
        do_start;;
  stop)
        do_stop
        ;;
  status)
        do_status
        ;;
  restart)
        do_stop
        do_start
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
        exit 3
        ;;
esac
 
exit 0
 