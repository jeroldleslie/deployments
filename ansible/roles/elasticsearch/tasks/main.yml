  #############################################################################################################################################################
#To run:
#  Set your NEVERWINTERDP_HOME variable
#    #> export NEVERWINTERDP_HOME=/path/to/NeverwinterDP
#    #> ansible-playbook playbooks/scribenginCluster.yml -i scribengininventory
#
#  Or pass in path to neverwinterdp on the command line:
#    #> ansible-playbook playbooks/scribenginCluster.yml -i scribengininventory --extra-vars "neverwinterdp_home_override=/path/to/NeverwinterDP"
#############################################################################################################################################################
- include: ../../../programs/npm.yml

- name: Set neverwinterdp_home to neverwinterdp_home_override if its been passed in on command line
  when: neverwinterdp_home_override is defined
  run_once: true
  set_fact:
    neverwinterdp_home: "{{neverwinterdp_home_override}}"

- name: Check to make sure environment variables are sane
  fail: msg="Variable '{{ item }}' is not defined" 
  when: ({{item}} is undefined) or ({{item}} is none) or ({{item}}|trim == '') 
  run_once: true
  with_items: 
    - neverwinterdp_home

- name: Get neverwinterdp_home path info locally
  local_action: stat path={{neverwinterdp_home}}
  register: check_path
  run_once: true

- name: Check if neverwinterdp_home path exists locally
  local_action: fail msg='{{neverwinterdp_home}} does not exist'
  when: not(check_path.stat.exists)
  run_once: true

#- name: Echo local NEVERWINTERDP_HOME
#  debug: msg="This is NeverwinterDP Home on the local machine {{neverwinterdp_home}}"
#  run_once: true

- name: Building Elasticsearch locally
  local_action: shell cd {{local_elasticsearch_folder}} && gradle clean build install -x test
  register: stdout
  run_once: true

- name: Output from gradle build
  debug: var=stdout.stdout_lines
  run_once: true

- name: Release Elasticsearch locally
  local_action: shell cd {{local_elasticsearch_folder}} && gradle clean build release -x test
  register: stdout
  run_once: true
  
- name: Output from gradle release
  debug: var=stdout.stdout_lines
  run_once: true

- name: Copy local files from {{local_elasticsearch_release_folder}} to remote hosts /opt/
  copy: src={{local_elasticsearch_release_folder}} dest=/opt/

- name: Make elasticsearch.sh executable
  file: mode=u+rxw path=/opt/elasticsearch/bin/elasticsearch.sh
  
- name: Start elasticsearch
  shell: /opt/elasticsearch/bin/elasticsearch.sh

- name: Wait elasticsearch to start
  wait_for: port=9200 delay=10

- name: move kibana data json files to container
  sudo: yes
  copy: src={{ playbook_dir }}/../configs/bootstrap/post-install/kibana/config/kibana.json dest=/opt/kibana.json

- name: Install elasticdump
  sudo: yes
  shell: npm install elasticdump -g
  
- name: Run elasticdump
  shell: elasticdump --input=/opt/kibana.json --output=http://localhost:9200/.kibana --type=data
    
