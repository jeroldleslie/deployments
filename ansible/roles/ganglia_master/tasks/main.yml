- name: Install epel-release
  sudo: yes
  yum: name=epel-release state=installed
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  
- name: Install Ganglia
  sudo: yes
  yum: name={{ item }} state=installed
  with_items:
    - ganglia
    - ganglia-gmetad
    - ganglia-gmond
    - ganglia-web
  
#- name: Add ganglia config 
#  template: src={{ item }}.j2 dest=/etc/ganglia/{{ item }}
#  sudo: yes
#  with_items:
#    - gmond.conf

- name: Configure gmond (cluster name)
  sudo: yes
  replace: dest=/etc/ganglia/gmond.conf regexp='cluster\s{\s*name\s*=\s*\"\unspecified\"' replace='cluster {\n  name = "{{ cluster }}"'

- name: Configure gmond (ganglia master url)
  sudo: yes
  replace: dest=/etc/ganglia/gmond.conf regexp='udp_send_channel\s{\s*' replace='udp_send_channel {\n  host = {{ ganglia_url }}\n'

- name: Configure gmond (remove multicast)
  sudo: yes
  replace: dest=/etc/ganglia/gmond.conf regexp='.*{{ item }}.*' replace=''
  with_items:
    - mcast_join
    - mcast_join
    - bind\s*=\s*\d*
    - retry_bind

- name: Configure gmetad
  sudo: yes
  lineinfile: dest=/etc/ganglia/gmetad.conf state=present line='data_source "{{ cluster }}" 60 {{ ganglia_url }}'


- name: Configure httpd
  sudo: yes
  lineinfile: dest=/etc/httpd/conf/httpd.conf line="<Directory \"/usr/share/ganglia\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n"
  
- name: Add alias to httpd ganglia.conf 
  sudo: yes
  shell: echo "Alias /ganglia /usr/share/ganglia" > /etc/httpd/conf.d/ganglia.conf 

- name: Start ganglia master services (CentOS)
  service: name={{ item }} state=restarted
  sudo: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  with_items:
    - gmond
    - gmetad
    - httpd
  when: ansible_virtualization_type != 'docker'
  

- name: Start gmond manually
  shell: "/usr/sbin/gmond"
  sudo: yes
  when: ansible_virtualization_type == 'docker'
  
- name: Start gmetad manually
  shell: "/usr/sbin/gmetad"
  sudo: yes
  when: ansible_virtualization_type == 'docker'
  
- name: Start httpd manually
  shell: "/usr/sbin/httpd"
  sudo: yes
  when: ansible_virtualization_type == 'docker'
