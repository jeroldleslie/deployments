---
#Include variables from file
- include_vars: "../../../profile/{{ profile_type | default('default') }}.yml"
  tags: 
    [ configure, install, start, stop, force-stop ]
  #when: ansible_virtualization_type != 'docker'

- name: Profile type
  local_action: debug msg="{{ profile_type | default('default') }}"
  run_once: true
  tags: [ configure, install, clean, start, stop, force-stop ]

  #To avoid Ubuntu issue running CentOS container
- name: Get OS of host
  local_action: shell python -c "import platform; print platform.dist()[0].lower().rstrip()"
  register: host_os_info
  run_once: true
  tags: [ configure, install, clean, start, stop, force-stop ]

- name: Install epel-release
  sudo: yes
  yum: name=epel-release state=installed
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    - install
  #when: ansible_virtualization_type != 'docker'
  
- name: Install Ganglia
  sudo: yes
  yum: name={{ item }} state=installed
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  with_items:
    - ganglia
    - ganglia-gmetad
    - ganglia-gmond
    - ganglia-web
  #when: ansible_virtualization_type != 'docker'
  tags:
    - install

- name: Configure gmetad
  sudo: yes
  lineinfile: dest=/etc/ganglia/gmetad.conf state=present line='data_source "{{ monitoring.software.installation.cluster }}" 60 {{ monitoring.software.installation.ganglia_url }}'
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    [ install, configure ]

- name: Configure httpd
  sudo: yes
  lineinfile: dest=/etc/httpd/conf/httpd.conf line="<Directory \"/usr/share/ganglia\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n"
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    [ install, configure ]
  
- name: Add alias to httpd ganglia.conf 
  sudo: yes
  shell: echo "Alias /ganglia /usr/share/ganglia" > /etc/httpd/conf.d/ganglia.conf 
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    [ install, configure ]


- name: Kill ganglia services
  shell: kill -9 $(ps -ef | grep {{ item }} | grep -v grep | awk '{print $2}')
  sudo: yes
  with_items:
    - gmond
    - gmetad
    - httpd
  ignore_errors: yes
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    - force-stop

    
- name: Stop ganglia master services (CentOS)
  service: name={{ item }} state=stopped
  sudo: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  with_items:
    - gmond
    - gmetad
    - httpd
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  tags:
    - stop

- name: Start ganglia master services (CentOS)
  service: name={{ item }} state=started
  sudo: yes
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' )
  with_items:
    - gmond
    - gmetad
    - httpd
  when: ansible_virtualization_type != 'docker'
  tags:
    - start 
 
- name: Start gmond manually
  shell: "/usr/sbin/gmond"
  sudo: yes
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' ) and ansible_virtualization_type == 'docker' 
  tags:
    - start    
  
- name: Start gmetad manually
  shell: "/usr/sbin/gmetad"
  sudo: yes
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' ) and  ansible_virtualization_type == 'docker'
  tags:
    - start    
  
- name: Start httpd manually
  shell: "/usr/sbin/httpd"
  sudo: yes
  when: not( host_os_info.stdout == "ubuntu" and ansible_virtualization_type == 'docker' ) and  ansible_virtualization_type == 'docker'
  tags:
    - start    
  