---
- name: make storm user
  user: name={{ storm_user }} state=present
  sudo: yes

- name: make storm group
  group: name={{ storm_group }} state=present
  sudo: yes

- name: Create storm data directory
  file: path={{ storm_data_dir }} state=directory mode=755 group={{ storm_group }} owner={{ storm_user }}
  sudo: yes


## Creating home dir

- name: Check if home dir is created
  stat: path={{ storm_home_dir }}
  register: created

- name: Create storm home directory if it has not been created yet
  file: path={{ storm_home_dir }} state=directory mode=755 group={{ storm_group }} owner={{ storm_user }}
  when: created.stat.exists == false
  sudo: yes

## Downloading storm

- name: Check if storm is already downloaded
  stat: path={{ storm_home_dir }}/{{ storm_tgz }}
  register: downloaded

- name: Downloading storm tgz
  get_url: url={{ storm_tgz_url }} dest={{ storm_home_dir }}
  when: downloaded.stat.exists == false

## Untar + unzip

- name: Check if the tgz is already unarchived
  stat: path={{ storm_home_dir }}/bin
  register: unarchived

- name: Unarchive tgz
  unarchive: src={{ storm_home_dir }}/{{ storm_tgz  }} dest={{ storm_home_dir }} copy=no
  sudo: yes
  when: unarchived.stat.exists == false

- name: Rename storm dir to use short path
  shell: mv {{ storm_home_dir }}/{{ storm_dir }}/* {{ storm_home_dir }}/.
  sudo: yes
  when: unarchived.stat.exists == false


## Adding storm configuration

- name: updating storm.yaml
  template: src={{ item }}.j2 dest={{ storm_home_dir }}/conf/{{ item }}
  sudo: yes
  with_items:
    - storm.yaml

## Start Nimbus
#- name: Launch Storm Nimbus
#  shell: /opt/{{ storm_dir }}/bin/storm nimbus

## Start UI
#- name: Launch Nimbus UI
#  shell: /opt/{{ storm_dir }}/bin/storm ui

